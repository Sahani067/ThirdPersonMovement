using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


[RequireComponent(typeof(CharacterController))]
[RequireComponent(typeof(Animator))]
public class PlayerMovement : MonoBehaviour
{
    CharacterController controller;
    Animator anim;
    Vector3 movedirection;
    [SerializeField] Transform Cam;
    [SerializeField] LayerMask groundlayer;
    [SerializeField] float PlayerSpeed = 2f;
    [SerializeField] float JumpForce = 2f;
    [SerializeField] float gravity = 2f;
    [SerializeField] bool jumping;
    [SerializeField] bool grounded;

    void Start()
    {
        Cursor.lockState = CursorLockMode.Locked;
        controller = GetComponent<CharacterController>();
        anim = GetComponent<Animator>();
    }
    void Update()
    {
        grounded = Physics.CheckSphere(transform.position, 0.3f, groundlayer);


        if (grounded && movedirection.y < 0)
        {
            movedirection.y = -2f;
        }

        float horizontal = Input.GetAxis("Horizontal");
        float vertical = Input.GetAxis("Vertical");

        //
        anim.SetFloat("SpeedX", horizontal, 0.05f, Time.deltaTime);
        anim.SetFloat("SpeedZ", vertical, 0.05f, Time.deltaTime);
        //


        Vector3 move = transform.right * horizontal + transform.forward * vertical;
        controller.Move(move * PlayerSpeed * Time.deltaTime);
        //
        if (Input.GetButtonDown("Jump") && grounded)
        {
            movedirection.y = Mathf.Sqrt(JumpForce * -2f * gravity);
        }
        movedirection.y += gravity * Time.deltaTime;

        controller.Move(movedirection * Time.deltaTime);

        if (grounded)
        {
            anim.SetBool("fall", false);
        }
        else
        {
            anim.SetBool("fall", true);
        }
        //
    }

    private void LateUpdate()
    {
        // Player Rotation
        var RotationDir = Cam.transform.rotation;
        RotationDir.x = 0;
        RotationDir.z = 0;
        transform.rotation = RotationDir;
        //
    }
}
